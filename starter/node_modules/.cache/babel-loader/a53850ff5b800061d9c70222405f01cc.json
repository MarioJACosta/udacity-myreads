{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/ListBooks.js\",\n    _s = $RefreshSig$();\n\nimport BookShelf from \"./BookShelf\";\nimport OpenSearchButton from \"./OpenSearchButton\";\nimport PropTypes from \"prop-types\";\nimport { useEffect, useState } from \"react\";\nimport * as BooksApi from \"../utils/BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListBooks = ({\n  shelves,\n  toggleShowSearchPage\n}) => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksApi.getAll();\n      setBooks(res);\n    };\n\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MyReads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-content\",\n      children: [/*#__PURE__*/_jsxDEV(OpenSearchButton, {\n        toggleShowSearchPage: toggleShowSearchPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: shelves.map(shelf => /*#__PURE__*/_jsxDEV(BookShelf, {\n          shelf: shelf,\n          books: books\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListBooks, \"2ZNGozkvldSL/bPsL6QaUeZUH+E=\");\n\n_c = ListBooks;\nListBooks.propTypes = {\n  shelves: PropTypes.array.isRequired,\n  toggleShowSearchPage: PropTypes.func.isRequired\n};\nexport default ListBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBooks\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/ListBooks.js"],"names":["BookShelf","OpenSearchButton","PropTypes","useEffect","useState","BooksApi","ListBooks","shelves","toggleShowSearchPage","books","setBooks","isLoading","setIsLoading","getBooks","res","getAll","map","shelf","propTypes","array","isRequired","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAAqC;AAAA;;AACnD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAG,YAAY;AACzB,YAAMC,GAAG,GAAG,MAAMT,QAAQ,CAACU,MAAT,EAAlB;AACAL,MAAAA,QAAQ,CAACI,GAAD,CAAR;AACH,KAHD;;AAKAD,IAAAA,QAAQ;AACX,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,oBAAoB,EAAEL;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKD,OAAO,CAACS,GAAR,CAAaC,KAAD,iBACT,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAyB,UAAA,KAAK,EAAER;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA5BD;;GAAMH,S;;KAAAA,S;AA8BNA,SAAS,CAACY,SAAV,GAAsB;AAClBX,EAAAA,OAAO,EAAEL,SAAS,CAACiB,KAAV,CAAgBC,UADP;AAElBZ,EAAAA,oBAAoB,EAAEN,SAAS,CAACmB,IAAV,CAAeD;AAFnB,CAAtB;AAKA,eAAed,SAAf","sourcesContent":["import BookShelf from \"./BookShelf\";\r\nimport OpenSearchButton from \"./OpenSearchButton\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useEffect, useState} from \"react\";\r\nimport * as BooksApi from \"../utils/BooksAPI\";\r\n\r\nconst ListBooks = ({shelves, toggleShowSearchPage}) => {\r\n    const [books, setBooks] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const getBooks = async () => {\r\n            const res = await BooksApi.getAll();\r\n            setBooks(res);\r\n        };\r\n\r\n        getBooks();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <OpenSearchButton toggleShowSearchPage={toggleShowSearchPage}/>\r\n                <div>\r\n                    {shelves.map((shelf) => (\r\n                        <BookShelf shelf={shelf} books={books}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nListBooks.propTypes = {\r\n    shelves: PropTypes.array.isRequired,\r\n    toggleShowSearchPage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ListBooks;"]},"metadata":{},"sourceType":"module"}