{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport * as BooksApi from \"../utils/BooksAPI\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  id: 'move',\n  value: 'Move to...',\n  disable: true\n}, {\n  id: 'currentlyReading',\n  value: 'Currently Reading',\n  disable: false\n}, {\n  id: 'wantToRead',\n  value: 'Want to Read',\n  disable: false\n}, {\n  id: 'read',\n  value: 'Read',\n  disable: false\n}, {\n  id: 'none',\n  value: 'None',\n  disable: false\n}];\n\nconst Menu = ({\n  book,\n  updateBooks\n}) => {\n  _s();\n\n  const navigate = useNavigate();\n\n  const handleChange = event => {\n    const shelf = event.target.value;\n\n    if (shelf !== \"\" || shelf !== 'none') {\n      BooksApi.update(book, shelf).then(() => {\n        updateBooks();\n        navigate('/');\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-shelf-changer\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: book.shelf,\n      onChange: event => {\n        handleChange(event);\n      },\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.id,\n        disabled: option.disable,\n        children: [\" \", option.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Menu;\nMenu.propTypes = {\n  book: PropTypes.object.isRequired,\n  updateBooks: PropTypes.func.isRequired\n};\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/Menu.js"],"names":["PropTypes","BooksApi","useNavigate","options","id","value","disable","Menu","book","updateBooks","navigate","handleChange","event","shelf","target","update","then","map","option","propTypes","object","isRequired","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,EAAE,EAAE,MADR;AAEIC,EAAAA,KAAK,EAAE,YAFX;AAGIC,EAAAA,OAAO,EAAE;AAHb,CADY,EAMZ;AACIF,EAAAA,EAAE,EAAE,kBADR;AAEIC,EAAAA,KAAK,EAAE,mBAFX;AAGIC,EAAAA,OAAO,EAAE;AAHb,CANY,EAWZ;AACIF,EAAAA,EAAE,EAAE,YADR;AAEIC,EAAAA,KAAK,EAAE,cAFX;AAGIC,EAAAA,OAAO,EAAE;AAHb,CAXY,EAgBZ;AACIF,EAAAA,EAAE,EAAE,MADR;AAEIC,EAAAA,KAAK,EAAE,MAFX;AAGIC,EAAAA,OAAO,EAAE;AAHb,CAhBY,EAqBZ;AACIF,EAAAA,EAAE,EAAE,MADR;AAEIC,EAAAA,KAAK,EAAE,MAFX;AAGIC,EAAAA,OAAO,EAAE;AAHb,CArBY,CAAhB;;AA4BA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAyB;AAAA;;AAClC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC5B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaT,KAA3B;;AAEA,QAAIQ,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,MAA9B,EAAsC;AAClCZ,MAAAA,QAAQ,CAACc,MAAT,CAAgBP,IAAhB,EAAsBK,KAAtB,EAA6BG,IAA7B,CAAkC,MAAM;AACpCP,QAAAA,WAAW;AACXC,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACH,OAHD;AAIH;AACJ,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAQ,MAAA,KAAK,EAAEF,IAAI,CAACK,KAApB;AAA2B,MAAA,QAAQ,EAAGD,KAAD,IAAW;AAC5CD,QAAAA,YAAY,CAACC,KAAD,CAAZ;AACH,OAFD;AAAA,gBAGKT,OAAO,CAACc,GAAR,CAAaC,MAAD,iBACT;AAAQ,QAAA,KAAK,EAAEA,MAAM,CAACd,EAAtB;AAA0B,QAAA,QAAQ,EAAEc,MAAM,CAACZ,OAA3C;AAAA,wBAAsDY,MAAM,CAACb,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AAHL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzBD;;GAAME,I;UACeL,W;;;KADfK,I;AA2BNA,IAAI,CAACY,SAAL,GAAiB;AACbX,EAAAA,IAAI,EAAER,SAAS,CAACoB,MAAV,CAAiBC,UADV;AAEbZ,EAAAA,WAAW,EAAET,SAAS,CAACsB,IAAV,CAAeD;AAFf,CAAjB;AAKA,eAAed,IAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport * as BooksApi from \"../utils/BooksAPI\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst options = [\r\n    {\r\n        id: 'move',\r\n        value: 'Move to...',\r\n        disable: true\r\n    },\r\n    {\r\n        id: 'currentlyReading',\r\n        value: 'Currently Reading',\r\n        disable: false\r\n    },\r\n    {\r\n        id: 'wantToRead',\r\n        value: 'Want to Read',\r\n        disable: false\r\n    },\r\n    {\r\n        id: 'read',\r\n        value: 'Read',\r\n        disable: false\r\n    },\r\n    {\r\n        id: 'none',\r\n        value: 'None',\r\n        disable: false\r\n    }\r\n];\r\n\r\nconst Menu = ({book, updateBooks}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleChange = (event) => {\r\n        const shelf = event.target.value;\r\n\r\n        if (shelf !== \"\" || shelf !== 'none') {\r\n            BooksApi.update(book, shelf).then(() => {\r\n                updateBooks();\r\n                navigate('/');\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"book-shelf-changer\">\r\n            <select value={book.shelf} onChange={(event) => {\r\n                handleChange(event)\r\n            }}>\r\n                {options.map((option) => (\r\n                    <option value={option.id} disabled={option.disable}> {option.value}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nMenu.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n    updateBooks: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Menu;\r\n"]},"metadata":{},"sourceType":"module"}