{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/ListBooks.js\";\nimport BookShelf from \"./BookShelf\";\nimport OpenSearchButton from \"./OpenSearchButton\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListBooks = ({\n  shelves,\n  books,\n  getBooks,\n  isLoading\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books-content\",\n    children: [/*#__PURE__*/_jsxDEV(OpenSearchButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: shelves.map(shelf => /*#__PURE__*/_jsxDEV(BookShelf, {\n        shelf: shelf,\n        books: books,\n        updateBooks: getBooks,\n        isLoading: isLoading\n      }, shelf.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListBooks;\nListBooks.propTypes = {\n  shelves: PropTypes.array.isRequired,\n  books: PropTypes.array.isRequired,\n  getBooks: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired\n};\nexport default ListBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBooks\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/ListBooks.js"],"names":["BookShelf","OpenSearchButton","PropTypes","ListBooks","shelves","books","getBooks","isLoading","map","shelf","id","propTypes","array","isRequired","func","bool"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAA2C;AACzD,sBAEI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAEQH,OAAO,CAACI,GAAR,CAAaC,KAAD,iBACR,QAAC,SAAD;AAEI,QAAA,KAAK,EAAEA,KAFX;AAGI,QAAA,KAAK,EAAEJ,KAHX;AAII,QAAA,WAAW,EAAEC,QAJjB;AAKI,QAAA,SAAS,EAAEC;AALf,SACSE,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmBH,CApBD;;KAAMP,S;AAsBNA,SAAS,CAACQ,SAAV,GAAsB;AAClBP,EAAAA,OAAO,EAAEF,SAAS,CAACU,KAAV,CAAgBC,UADP;AAElBR,EAAAA,KAAK,EAAEH,SAAS,CAACU,KAAV,CAAgBC,UAFL;AAGlBP,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,IAAV,CAAeD,UAHP;AAIlBN,EAAAA,SAAS,EAAEL,SAAS,CAACa,IAAV,CAAeF;AAJR,CAAtB;AAOA,eAAeV,SAAf","sourcesContent":["import BookShelf from \"./BookShelf\";\r\nimport OpenSearchButton from \"./OpenSearchButton\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListBooks = ({shelves, books, getBooks, isLoading}) => {\r\n    return (\r\n\r\n        <div className=\"list-books-content\">\r\n            <OpenSearchButton/>\r\n            <div>\r\n                {\r\n                    shelves.map((shelf) => (\r\n                        <BookShelf\r\n                            key={shelf.id}\r\n                            shelf={shelf}\r\n                            books={books}\r\n                            updateBooks={getBooks}\r\n                            isLoading={isLoading}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nListBooks.propTypes = {\r\n    shelves: PropTypes.array.isRequired,\r\n    books: PropTypes.array.isRequired,\r\n    getBooks: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default ListBooks;\r\n"]},"metadata":{},"sourceType":"module"}