{"ast":null,"code":"const api = \"https://reactnd-books-api.udacity.com\";\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token\n};\nexport const get = bookId => fetch(`${api}/books/${bookId}`, {\n  headers\n}).then(res => res.json()).then(data => data.book);\nexport const getAll = () => fetch(`${api}/books`, {\n  headers\n}).then(res => res.json()).then(data => data.books);\nexport const update = (book, shelf) => fetch(`${api}/books/${book.id}`, {\n  method: \"PUT\",\n  headers: { ...headers,\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    shelf\n  })\n}).then(res => res.json());\nexport const searchh = (query, maxResults) => {};\nexport const search = (query, maxResults) => fetch(`${api}/search`, {\n  method: \"POST\",\n  headers: { ...headers,\n    \"Content-Type\": \"application/json\"\n  },\n  body: JSON.stringify({\n    query,\n    maxResults\n  })\n}).then(res => res.json()).then(data => data.books);","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/utils/BooksAPI.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","then","res","json","data","book","getAll","books","update","shelf","id","method","body","JSON","stringify","searchh","query","maxResults","search"],"mappings":"AAAA,MAAMA,GAAG,GAAG,uCAAZ;AAEA,IAAIC,KAAK,GAAGC,YAAY,CAACD,KAAzB;AAEA,IAAI,CAACA,KAAL,EAAYA,KAAK,GAAGC,YAAY,CAACD,KAAb,GAAqBE,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAC,CAAnC,CAA7B;AAEZ,MAAMC,OAAO,GAAG;AACZC,EAAAA,MAAM,EAAE,kBADI;AAEZC,EAAAA,aAAa,EAAER;AAFH,CAAhB;AAKA,OAAO,MAAMS,GAAG,GAAIC,MAAD,IACfC,KAAK,CAAE,GAAEZ,GAAI,UAASW,MAAO,EAAxB,EAA2B;AAACJ,EAAAA;AAAD,CAA3B,CAAL,CACKM,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAD,IAAUA,IAAI,CAACC,IAFzB,CADG;AAKP,OAAO,MAAMC,MAAM,GAAG,MAClBN,KAAK,CAAE,GAAEZ,GAAI,QAAR,EAAiB;AAACO,EAAAA;AAAD,CAAjB,CAAL,CACKM,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWG,IAAD,IAAUA,IAAI,CAACG,KAFzB,CADG;AAKP,OAAO,MAAMC,MAAM,GAAG,CAACH,IAAD,EAAOI,KAAP,KAClBT,KAAK,CAAE,GAAEZ,GAAI,UAASiB,IAAI,CAACK,EAAG,EAAzB,EAA4B;AAC7BC,EAAAA,MAAM,EAAE,KADqB;AAE7BhB,EAAAA,OAAO,EAAE,EACL,GAAGA,OADE;AAEL,oBAAgB;AAFX,GAFoB;AAM7BiB,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACL,IAAAA;AAAD,GAAf;AANuB,CAA5B,CAAL,CAOGR,IAPH,CAOSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAPjB,CADG;AAUP,OAAO,MAAMY,OAAO,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB,CAE7C,CAFM;AAKP,OAAO,MAAMC,MAAM,GAAG,CAACF,KAAD,EAAQC,UAAR,KAClBjB,KAAK,CAAE,GAAEZ,GAAI,SAAR,EAAkB;AACnBuB,EAAAA,MAAM,EAAE,MADW;AAEnBhB,EAAAA,OAAO,EAAE,EACL,GAAGA,OADE;AAEL,oBAAgB;AAFX,GAFU;AAMnBiB,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACE,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAf;AANa,CAAlB,CAAL,CAQKhB,IARL,CAQWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARnB,EASKF,IATL,CASWG,IAAD,IAAUA,IAAI,CAACG,KATzB,CADG","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n    Accept: \"application/json\",\n    Authorization: token,\n};\n\nexport const get = (bookId) =>\n    fetch(`${api}/books/${bookId}`, {headers})\n        .then((res) => res.json())\n        .then((data) => data.book);\n\nexport const getAll = () =>\n    fetch(`${api}/books`, {headers})\n        .then((res) => res.json())\n        .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n    fetch(`${api}/books/${book.id}`, {\n        method: \"PUT\",\n        headers: {\n            ...headers,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({shelf}),\n    }).then((res) => res.json());\n\nexport const searchh = (query, maxResults) => {\n    \n}\n\n\nexport const search = (query, maxResults) =>\n    fetch(`${api}/search`, {\n        method: \"POST\",\n        headers: {\n            ...headers,\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({query, maxResults}),\n    })\n        .then((res) => res.json())\n        .then((data) => data.books);\n"]},"metadata":{},"sourceType":"module"}