{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport * as BooksApi from \"../utils/BooksAPI\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = ({\n  book\n}) => {\n  _s();\n\n  let navigate = useNavigate();\n  const [shelf, setShelf] = useState(\"\");\n  const selectOptions = [{\n    value: \"currentlyReading\",\n    label: \"Currently reading\"\n  }, {\n    value: \"wantToRead\",\n    label: \"Want to Read\"\n  }, {\n    value: \"read\",\n    label: \"Read\"\n  }, {\n    value: \"none\",\n    label: \"None\"\n  }];\n\n  const handleChange = event => {\n    let shelf = event.target.value;\n\n    if (shelf !== 'none') {\n      BooksApi.update(book, event.target.value);\n      navigate(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-shelf-changer\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onClick: event => {\n        setShelf(event.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        disabled: true,\n        children: \"Move to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"currentlyReading\",\n        children: \" Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wantToRead\",\n        children: \"Want to Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"read\",\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"mlovk3/MUpoG5hQQLd+RwJ9SKDw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Menu;\nMenu.propTypes = {\n  book: PropTypes.object.isRequired\n};\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/Menu.js"],"names":["PropTypes","BooksApi","useNavigate","useState","Menu","book","navigate","shelf","setShelf","selectOptions","value","label","handleChange","event","target","update","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACrB,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMM,aAAa,GAAG,CAClB;AAACC,IAAAA,KAAK,EAAE,kBAAR;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GADkB,EAElB;AAACD,IAAAA,KAAK,EAAE,YAAR;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFkB,EAGlB;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAHkB,EAIlB;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJkB,CAAtB;;AAOA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIN,KAAK,GAAGM,KAAK,CAACC,MAAN,CAAaJ,KAAzB;;AACA,QAAIH,KAAK,KAAK,MAAd,EAAsB;AAClBN,MAAAA,QAAQ,CAACc,MAAT,CAAgBV,IAAhB,EAAsBQ,KAAK,CAACC,MAAN,CAAaJ,KAAnC;AACAJ,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAGO,KAAD,IAAW;AACxBL,QAAAA,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACH,OAFD;AAAA,8BAGI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAnCD;;GAAMN,I;UACaF,W;;;KADbE,I;AAqCNA,IAAI,CAACY,SAAL,GAAiB;AACbX,EAAAA,IAAI,EAAEL,SAAS,CAACiB,MAAV,CAAiBC;AADV,CAAjB;AAIA,eAAed,IAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport * as BooksApi from \"../utils/BooksAPI\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\nconst Menu = ({book}) => {\r\n    let navigate = useNavigate();\r\n\r\n    const [shelf, setShelf] = useState(\"\");\r\n\r\n    const selectOptions = [\r\n        {value: \"currentlyReading\", label: \"Currently reading\"},\r\n        {value: \"wantToRead\", label: \"Want to Read\"},\r\n        {value: \"read\", label: \"Read\"},\r\n        {value: \"none\", label: \"None\"}\r\n    ];\r\n\r\n    const handleChange = (event) => {\r\n        let shelf = event.target.value\r\n        if (shelf !== 'none') {\r\n            BooksApi.update(book, event.target.value)\r\n            navigate(\"/\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"book-shelf-changer\">\r\n            <select onClick={(event) => {\r\n                setShelf(event.target.value)\r\n            }}>\r\n                <option value=\"none\" disabled>\r\n                    Move to...\r\n                </option>\r\n                <option value=\"currentlyReading\"> Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nMenu.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}