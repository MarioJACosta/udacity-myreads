{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport * as BooksApi from \"../utils/BooksAPI\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = ({\n  book\n}) => {\n  _s();\n\n  let navigate = useNavigate();\n  const [shelf, setShelf] = useState(\"\");\n  const selectOptions = [{\n    value: \"none\",\n    label: \"Move to...\",\n    isDisabled: true\n  }, {\n    value: \"currentlyReading\",\n    label: \"Currently Reading\"\n  }, {\n    value: \"wantToRead\",\n    label: \"Want to Read\"\n  }, {\n    value: \"read\",\n    label: \"Read\"\n  }, {\n    value: \"none\",\n    label: \"None\"\n  }];\n\n  const handleChange = shelf => {\n    console.log(shelf);\n\n    if (shelf !== 'none') {\n      // BooksApi.update(book, event.target.value)\n      navigate(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-shelf-changer\",\n    children: /*#__PURE__*/_jsxDEV(Select // className=\"select\"\n    , {\n      options: selectOptions,\n      onClick: choice => {\n        handleChange(choice.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"mlovk3/MUpoG5hQQLd+RwJ9SKDw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Menu;\nMenu.propTypes = {\n  book: PropTypes.object.isRequired\n};\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/Menu.js"],"names":["PropTypes","BooksApi","useNavigate","useState","Select","Menu","book","navigate","shelf","setShelf","selectOptions","value","label","isDisabled","handleChange","console","log","choice","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACrB,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMO,aAAa,GAAG,CAClB;AAACC,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE,YAAvB;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GADkB,EAElB;AAACF,IAAAA,KAAK,EAAE,kBAAR;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GAFkB,EAGlB;AAACD,IAAAA,KAAK,EAAE,YAAR;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAHkB,EAIlB;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GAJkB,EAKlB;AAACD,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GALkB,CAAtB;;AAQA,QAAME,YAAY,GAAIN,KAAD,IAAW;AAC5BO,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;;AACA,QAAIA,KAAK,KAAK,MAAd,EAAsB;AAClB;AACAD,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACH;AACJ,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI,QAAC,MAAD,CACI;AADJ;AAEI,MAAA,OAAO,EAAEG,aAFb;AAGI,MAAA,OAAO,EAAGO,MAAD,IAAY;AACjBH,QAAAA,YAAY,CAACG,MAAM,CAACN,KAAR,CAAZ;AACH;AALL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAhCD;;GAAMN,I;UACaH,W;;;KADbG,I;AAkCNA,IAAI,CAACa,SAAL,GAAiB;AACbZ,EAAAA,IAAI,EAAEN,SAAS,CAACmB,MAAV,CAAiBC;AADV,CAAjB;AAIA,eAAef,IAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport * as BooksApi from \"../utils/BooksAPI\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport Select from 'react-select'\r\n\r\nconst Menu = ({book}) => {\r\n    let navigate = useNavigate();\r\n\r\n    const [shelf, setShelf] = useState(\"\");\r\n\r\n    const selectOptions = [\r\n        {value: \"none\", label: \"Move to...\", isDisabled: true},\r\n        {value: \"currentlyReading\", label: \"Currently Reading\"},\r\n        {value: \"wantToRead\", label: \"Want to Read\"},\r\n        {value: \"read\", label: \"Read\"},\r\n        {value: \"none\", label: \"None\"}\r\n    ];\r\n\r\n    const handleChange = (shelf) => {\r\n        console.log(shelf)\r\n        if (shelf !== 'none') {\r\n            // BooksApi.update(book, event.target.value)\r\n            navigate(\"/\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"book-shelf-changer\">\r\n            <Select\r\n                // className=\"select\"\r\n                options={selectOptions}\r\n                onClick={(choice) => {\r\n                    handleChange(choice.value)\r\n                }}>\r\n            </Select>\r\n        </div>\r\n    )\r\n};\r\n\r\nMenu.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}