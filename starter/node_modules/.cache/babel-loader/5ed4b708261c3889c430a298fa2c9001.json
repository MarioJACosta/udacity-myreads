{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/Menu.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport * as BooksApi from \"../utils/BooksAPI\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Menu = ({\n  book,\n  updateBooks,\n  shelf\n}) => {\n  _s();\n\n  const [shelfId, setShelfId] = useState(shelf);\n  let navigate = useNavigate();\n  let location = useLocation();\n\n  const handleChange = event => {\n    setShelfId(event.target.value);\n\n    if (shelf !== 'none' || shelf !== \"\" || shelf !== \"move\") {\n      BooksApi.update(book, shelf);\n\n      if (location.pathname === '/search') {\n        navigate(\"/\");\n        return;\n      }\n\n      updateBooks();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-shelf-changer\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      value: shelfId,\n      onChange: event => {\n        handleChange(event);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"move\",\n        disabled: true,\n        children: \"Move to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"currentlyReading\",\n        children: \" Currently Reading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"wantToRead\",\n        children: \"Want to Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"read\",\n        children: \"Read\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"None\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Menu, \"A5crG0N/0fg4eb8icW+UnNPJVLU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = Menu;\nMenu.propTypes = {\n  book: PropTypes.object.isRequired\n};\nexport default Menu;\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/Menu.js"],"names":["PropTypes","BooksApi","useLocation","useNavigate","useState","Menu","book","updateBooks","shelf","shelfId","setShelfId","navigate","location","handleChange","event","target","value","update","pathname","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,kBAAvC;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,WAAP;AAAoBC,EAAAA;AAApB,CAAD,KAAgC;AAAA;;AAEzC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,KAAD,CAAtC;AAEA,MAAIG,QAAQ,GAAGR,WAAW,EAA1B;AACA,MAAIS,QAAQ,GAAGV,WAAW,EAA1B;;AAEA,QAAMW,YAAY,GAAIC,KAAD,IAAW;AAC5BJ,IAAAA,UAAU,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;;AAEA,QAAIR,KAAK,KAAK,MAAV,IAAoBA,KAAK,KAAK,EAA9B,IAAoCA,KAAK,KAAK,MAAlD,EAA0D;AACtDP,MAAAA,QAAQ,CAACgB,MAAT,CAAgBX,IAAhB,EAAsBE,KAAtB;;AACA,UAAII,QAAQ,CAACM,QAAT,KAAsB,SAA1B,EAAqC;AACjCP,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACA;AACH;;AACDJ,MAAAA,WAAW;AACd;AACJ,GAXD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,2BACI;AAAQ,MAAA,KAAK,EAAEE,OAAf;AAAwB,MAAA,QAAQ,EAAGK,KAAD,IAAW;AACzCD,QAAAA,YAAY,CAACC,KAAD,CAAZ;AACH,OAFD;AAAA,8BAGI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,QAAQ,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAMI;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CApCD;;GAAMT,I;UAIaF,W,EACAD,W;;;KALbG,I;AAsCNA,IAAI,CAACc,SAAL,GAAiB;AACbb,EAAAA,IAAI,EAAEN,SAAS,CAACoB,MAAV,CAAiBC;AADV,CAAjB;AAIA,eAAehB,IAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport * as BooksApi from \"../utils/BooksAPI\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\n\r\nconst Menu = ({book, updateBooks, shelf}) => {\r\n\r\n    const [shelfId, setShelfId] = useState(shelf)\r\n\r\n    let navigate = useNavigate();\r\n    let location = useLocation();\r\n\r\n    const handleChange = (event) => {\r\n        setShelfId(event.target.value)\r\n\r\n        if (shelf !== 'none' || shelf !== \"\" || shelf !== \"move\") {\r\n            BooksApi.update(book, shelf)\r\n            if (location.pathname === '/search') {\r\n                navigate(\"/\");\r\n                return;\r\n            }\r\n            updateBooks()\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"book-shelf-changer\">\r\n            <select value={shelfId} onChange={(event) => {\r\n                handleChange(event)\r\n            }}>\r\n                <option value=\"move\" disabled>\r\n                    Move to...\r\n                </option>\r\n                <option value=\"currentlyReading\"> Currently Reading</option>\r\n                <option value=\"wantToRead\">Want to Read</option>\r\n                <option value=\"read\">Read</option>\r\n                <option value=\"none\">None</option>\r\n            </select>\r\n        </div>\r\n    )\r\n};\r\n\r\nMenu.propTypes = {\r\n    book: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Menu;"]},"metadata":{},"sourceType":"module"}