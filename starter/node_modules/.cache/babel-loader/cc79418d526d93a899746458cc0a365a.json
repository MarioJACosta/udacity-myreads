{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/SearchBar.js\",\n    _s = $RefreshSig$();\n\nimport * as BooksApi from \"../utils/BooksAPI\";\nimport { useEffect, useState } from \"react\";\nimport BookList from \"./BookList\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = ({\n  books,\n  updateBooks\n}) => {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const updateQuery = query => {\n    setQuery(query.trim());\n  };\n\n  useEffect(() => {\n    query !== \"\" ? searchBooks(query) : setSearchedBooks([]);\n  }, [query, searchBooks, setSearchedBooks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"close-search\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title, author, or ISBN\",\n          onChange: event => updateQuery(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: searchedBooks.length === 0 && query !== \"\" && !isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-books\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Couldn't find any books for \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [query, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please try again with a different query.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(BookList, {\n        books: searchedBooks,\n        isLoading: isLoading,\n        updateBooks: updateBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"cbHUJgzS4tND6htXNcnreRNuXn4=\");\n\n_c = SearchBar;\nSearchBar.propTypes = {\n  books: PropTypes.array.isRequired,\n  updateBooks: PropTypes.func.isRequired\n};\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/SearchBar.js"],"names":["BooksApi","useEffect","useState","BookList","Link","PropTypes","SearchBar","books","updateBooks","query","setQuery","searchedBooks","setSearchedBooks","isLoading","setIsLoading","updateQuery","trim","searchBooks","event","target","value","length","propTypes","array","isRequired","func"],"mappings":";;;AAAA,OAAO,KAAKA,QAAZ,MAA0B,mBAA1B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAAA;;AACxC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMa,WAAW,GAAIN,KAAD,IAAW;AAC3BC,IAAAA,QAAQ,CAACD,KAAK,CAACO,IAAN,EAAD,CAAR;AACH,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,KAAK,EAAV,GAAeQ,WAAW,CAACR,KAAD,CAA1B,GAAoCG,gBAAgB,CAAC,EAAD,CAApD;AACH,GAFQ,EAEN,CAACH,KAAD,EAAQQ,WAAR,EAAqBL,gBAArB,CAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI,QAAC,IAAD;AACI,QAAA,EAAE,EAAC,GADP;AAEI,QAAA,SAAS,EAAC,cAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,kCAFhB;AAGI,UAAA,QAAQ,EAAGM,KAAD,IAAWH,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd;AAHpC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAgBI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,gBAEQT,aAAa,CAACU,MAAd,KAAyB,CAAzB,IAA8BZ,KAAK,KAAK,EAAxC,IAA8C,CAACI,SAA/C,gBAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA,kEAA+B;AAAA,uBAAIJ,KAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,gBAOI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEE,aAAjB;AAAgC,QAAA,SAAS,EAAEE,SAA3C;AAAsD,QAAA,WAAW,EAAEL;AAAnE;AAAA;AAAA;AAAA;AAAA;AATZ;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA5CD;;GAAMF,S;;KAAAA,S;AA8CNA,SAAS,CAACgB,SAAV,GAAsB;AAClBf,EAAAA,KAAK,EAAEF,SAAS,CAACkB,KAAV,CAAgBC,UADL;AAElBhB,EAAAA,WAAW,EAAEH,SAAS,CAACoB,IAAV,CAAeD;AAFV,CAAtB;AAKA,eAAelB,SAAf","sourcesContent":["import * as BooksApi from \"../utils/BooksAPI\"\r\nimport {useEffect, useState} from \"react\";\r\nimport BookList from \"./BookList\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchBar = ({books, updateBooks}) => {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [searchedBooks, setSearchedBooks] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const updateQuery = (query) => {\r\n        setQuery(query.trim());\r\n    };\r\n\r\n    useEffect(() => {\r\n        query !== \"\" ? searchBooks(query) : setSearchedBooks([]);\r\n    }, [query, searchBooks, setSearchedBooks]);\r\n\r\n    return (\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link\r\n                    to=\"/\"\r\n                    className=\"close-search\"\r\n                >\r\n                    Close\r\n                </Link>\r\n                <div className=\"search-books-input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Search by title, author, or ISBN\"\r\n                        onChange={(event) => updateQuery(event.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n                {\r\n                    searchedBooks.length === 0 && query !== \"\" && !isLoading\r\n                        ?\r\n                        <div className='no-books'>\r\n                            <p>Couldn't find any books for <i>{query}.</i></p>\r\n                            <p>Please try again with a different query.</p>\r\n                        </div>\r\n                        :\r\n                        <BookList books={searchedBooks} isLoading={isLoading} updateBooks={updateBooks}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nSearchBar.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    updateBooks: PropTypes.func.isRequired\r\n}\r\n\r\nexport default SearchBar;\r\n"]},"metadata":{},"sourceType":"module"}