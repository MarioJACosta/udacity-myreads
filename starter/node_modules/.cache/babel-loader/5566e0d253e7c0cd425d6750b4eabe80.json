{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/BookListContent.js\";\nimport Book from \"./Book\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"./Spinner\";\nimport EmptyShelf from \"./EmptyShelf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookListContent = ({\n  shelf,\n  books,\n  updateBooks,\n  isLoading\n}) => {\n  const getBooksInThisShelf = () => {\n    if (shelf) {\n      return books.filter(book => book.shelf === (shelf && shelf.id));\n    }\n\n    return books;\n  };\n\n  const booksInShelf = getBooksInThisShelf();\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"books-grid\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }, this) : booksInShelf.length > 0 ? booksInShelf.map((book, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Book, {\n        shelf: shelf,\n        book: book,\n        updateBooks: updateBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 29\n    }, this)) : /*#__PURE__*/_jsxDEV(EmptyShelf, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BookListContent;\nBookListContent.propTypes = {\n  shelf: PropTypes.object,\n  books: PropTypes.array.isRequired,\n  updateBooks: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired\n};\nexport default BookListContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookListContent\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/BookListContent.js"],"names":["Book","PropTypes","Spinner","EmptyShelf","BookListContent","shelf","books","updateBooks","isLoading","getBooksInThisShelf","filter","book","id","booksInShelf","length","map","index","propTypes","object","array","isRequired","func","bool"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AAChE,QAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAIJ,KAAJ,EAAW;AACP,aAAOC,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAWA,IAAI,CAACN,KAAL,MAAgBA,KAAK,IAAIA,KAAK,CAACO,EAA/B,CAAxB,CAAP;AACH;;AACD,WAAON,KAAP;AACH,GALD;;AAOA,QAAMO,YAAY,GAAGJ,mBAAmB,EAAxC;AAEA,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cAEQD,SAAS,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADG,GAEHK,YAAY,CAACC,MAAb,GAAsB,CAAtB,GACID,YAAY,CAACE,GAAb,CAAiB,CAACJ,IAAD,EAAOK,KAAP,kBACf;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,KAAK,EAAEX,KADX;AAEI,QAAA,IAAI,EAAEM,IAFV;AAGI,QAAA,WAAW,EAAEJ;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ,OAASS,KAAT;AAAA;AAAA;AAAA;AAAA,YADF,CADJ,gBAUI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAdlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA7BD;;KAAMZ,e;AA+BNA,eAAe,CAACa,SAAhB,GAA4B;AACxBZ,EAAAA,KAAK,EAAEJ,SAAS,CAACiB,MADO;AAExBZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB,KAAV,CAAgBC,UAFC;AAGxBb,EAAAA,WAAW,EAAEN,SAAS,CAACoB,IAAV,CAAeD,UAHJ;AAIxBZ,EAAAA,SAAS,EAAEP,SAAS,CAACqB,IAAV,CAAeF;AAJF,CAA5B;AAOA,eAAehB,eAAf","sourcesContent":["import Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"./Spinner\";\r\nimport EmptyShelf from \"./EmptyShelf\";\r\n\r\nconst BookListContent = ({shelf, books, updateBooks, isLoading}) => {\r\n    const getBooksInThisShelf = () => {\r\n        if (shelf) {\r\n            return books.filter((book) => (book.shelf === (shelf && shelf.id)));\r\n        }\r\n        return books;\r\n    };\r\n\r\n    const booksInShelf = getBooksInThisShelf();\r\n\r\n    return (\r\n        <ol className=\"books-grid\">\r\n            {\r\n                isLoading\r\n                    ? <Spinner/>\r\n                    : booksInShelf.length > 0\r\n                        ? booksInShelf.map((book, index) => (\r\n                            <li key={index}>\r\n                                <Book\r\n                                    shelf={shelf}\r\n                                    book={book}\r\n                                    updateBooks={updateBooks}\r\n                                />\r\n                            </li>\r\n                        ))\r\n                        : <EmptyShelf/>\r\n            }\r\n        </ol>\r\n    )\r\n};\r\n\r\nBookListContent.propTypes = {\r\n    shelf: PropTypes.object,\r\n    books: PropTypes.array.isRequired,\r\n    updateBooks: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default BookListContent;\r\n"]},"metadata":{},"sourceType":"module"}