{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/BookShelf.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport BookList from \"./BookList\";\nimport { useEffect, useState } from \"react\";\nimport * as BooksApi from \"../utils/BooksAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookShelf = ({\n  shelf\n}) => {\n  _s();\n\n  const [books, setBooks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const getBooks = async () => {\n      const res = await BooksApi.getAll();\n      console.log(res);\n      setBooks(res);\n      setIsLoading(false);\n    };\n\n    getBooks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bookshelf\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"bookshelf-title\",\n      children: shelf.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bookshelf-books\",\n      children: /*#__PURE__*/_jsxDEV(BookList, {\n        shelf: shelf,\n        books: books,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookShelf, \"afGqjWUk/h11w8eECawyQehxQCc=\");\n\n_c = BookShelf;\nBookShelf.propTypes = {\n  shelf: PropTypes.object.isRequired,\n  books: PropTypes.array,\n  isLoading: PropTypes.bool.isRequired\n};\nexport default BookShelf;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookShelf\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/BookShelf.js"],"names":["PropTypes","BookList","useEffect","useState","BooksApi","BookShelf","shelf","books","setBooks","isLoading","setIsLoading","getBooks","res","getAll","console","log","name","propTypes","object","isRequired","array","bool"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAO,KAAKC,QAAZ,MAA0B,mBAA1B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,QAAQ,GAAG,YAAY;AACzB,YAAMC,GAAG,GAAG,MAAMR,QAAQ,CAACS,MAAT,EAAlB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAJ,MAAAA,QAAQ,CAACI,GAAD,CAAR;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KALD;;AAMAC,IAAAA,QAAQ;AACX,GARQ,EAQN,EARM,CAAT;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,gBAAiCL,KAAK,CAACU;AAAvC;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEV,KAAjB;AAAwB,QAAA,KAAK,EAAEC,KAA/B;AAAsC,QAAA,SAAS,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAvBD;;GAAMJ,S;;KAAAA,S;AAyBNA,SAAS,CAACY,SAAV,GAAsB;AAClBX,EAAAA,KAAK,EAAEN,SAAS,CAACkB,MAAV,CAAiBC,UADN;AAElBZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB,KAFC;AAGlBX,EAAAA,SAAS,EAAET,SAAS,CAACqB,IAAV,CAAeF;AAHR,CAAtB;AAMA,eAAed,SAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport BookList from \"./BookList\";\r\nimport {useEffect, useState} from \"react\";\r\nimport * as BooksApi from \"../utils/BooksAPI\";\r\n\r\nconst BookShelf = ({shelf}) => {\r\n    const [books, setBooks] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getBooks = async () => {\r\n            const res = await BooksApi.getAll();\r\n            console.log(res)\r\n            setBooks(res);\r\n            setIsLoading(false)\r\n        };\r\n        getBooks()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{shelf.name}</h2>\r\n\r\n            <div className=\"bookshelf-books\">\r\n                <BookList shelf={shelf} books={books} isLoading={isLoading}/>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nBookShelf.propTypes = {\r\n    shelf: PropTypes.object.isRequired,\r\n    books: PropTypes.array,\r\n    isLoading: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default BookShelf;"]},"metadata":{},"sourceType":"module"}