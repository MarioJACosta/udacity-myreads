{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/BookList.js\";\nimport Book from \"./Book\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"./Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookList = ({\n  shelf,\n  books,\n  updateBooks,\n  isLoading\n}) => {\n  const getBooksInThisShelf = () => {\n    if (shelf) {\n      return books.filter(book => book.shelf === (shelf && shelf.id));\n    }\n\n    return books;\n  };\n\n  const b = getBooksInThisShelf();\n  return /*#__PURE__*/_jsxDEV(\"ol\", {\n    className: \"books-grid\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }, this) : b.map((book, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Book, {\n        shelf: shelf,\n        book: book,\n        updateBooks: updateBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 29\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BookList;\nBookList.propTypes = {\n  shelf: PropTypes.object,\n  books: PropTypes.array.isRequired,\n  updateBooks: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired\n};\nexport default BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/BookList.js"],"names":["Book","PropTypes","Spinner","BookList","shelf","books","updateBooks","isLoading","getBooksInThisShelf","filter","book","id","b","map","index","propTypes","object","array","isRequired","func","bool"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,KAAR;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA;AAA5B,CAAD,KAA4C;AACzD,QAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAIJ,KAAJ,EAAW;AACP,aAAOC,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAWA,IAAI,CAACN,KAAL,MAAgBA,KAAK,IAAIA,KAAK,CAACO,EAA/B,CAAxB,CAAP;AACH;;AAED,WAAON,KAAP;AACH,GAND;;AAQA,QAAMO,CAAC,GAAGJ,mBAAmB,EAA7B;AAEA,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA,cAEQD,SAAS,gBACH,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADG,GAEHK,CAAC,CAACC,GAAF,CAAM,CAACH,IAAD,EAAOI,KAAP,kBACJ;AAAA,6BACI,QAAC,IAAD;AACI,QAAA,KAAK,EAAEV,KADX;AAEI,QAAA,IAAI,EAAEM,IAFV;AAGI,QAAA,WAAW,EAAEJ;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ,OAASQ,KAAT;AAAA;AAAA;AAAA;AAAA,YADF;AAJd;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA5BD;;KAAMX,Q;AA8BNA,QAAQ,CAACY,SAAT,GAAqB;AACjBX,EAAAA,KAAK,EAAEH,SAAS,CAACe,MADA;AAEjBX,EAAAA,KAAK,EAAEJ,SAAS,CAACgB,KAAV,CAAgBC,UAFN;AAGjBZ,EAAAA,WAAW,EAAEL,SAAS,CAACkB,IAAV,CAAeD,UAHX;AAIjBX,EAAAA,SAAS,EAAEN,SAAS,CAACmB,IAAV,CAAeF;AAJT,CAArB;AAOA,eAAef,QAAf","sourcesContent":["import Book from \"./Book\";\r\nimport PropTypes from \"prop-types\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst BookList = ({shelf, books, updateBooks, isLoading}) => {\r\n    const getBooksInThisShelf = () => {\r\n        if (shelf) {\r\n            return books.filter((book) => (book.shelf === (shelf && shelf.id)));\r\n        }\r\n\r\n        return books;\r\n    };\r\n\r\n    const b = getBooksInThisShelf()\r\n\r\n    return (\r\n        <ol className=\"books-grid\">\r\n            {\r\n                isLoading\r\n                    ? <Spinner/>\r\n                    : b.map((book, index) => (\r\n                        <li key={index}>\r\n                            <Book\r\n                                shelf={shelf}\r\n                                book={book}\r\n                                updateBooks={updateBooks}\r\n                            />\r\n                        </li>\r\n                    ))\r\n            }\r\n        </ol>\r\n    )\r\n};\r\n\r\nBookList.propTypes = {\r\n    shelf: PropTypes.object,\r\n    books: PropTypes.array.isRequired,\r\n    updateBooks: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default BookList;\r\n"]},"metadata":{},"sourceType":"module"}