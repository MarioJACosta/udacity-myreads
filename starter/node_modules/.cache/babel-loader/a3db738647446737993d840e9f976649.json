{"ast":null,"code":"var _jsxFileName = \"/home/mario/projects/udacity-myreads/starter/src/components/ListBooks.js\";\nimport BookShelf from \"./BookShelf\";\nimport OpenSearchButton from \"./OpenSearchButton\";\nimport PropTypes from \"prop-types\";\nimport EmptyShelf from \"./EmptyShelf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListBooks = ({\n  shelves,\n  books,\n  getBooks,\n  isLoading\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MyReads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), books.length > 0 ? /*#__PURE__*/_jsxDEV(EmptyShelf, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-books-content\",\n      children: [/*#__PURE__*/_jsxDEV(OpenSearchButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: shelves.map(shelf => /*#__PURE__*/_jsxDEV(BookShelf, {\n          shelf: shelf,\n          books: books,\n          updateBooks: getBooks,\n          isLoading: isLoading\n        }, shelf.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ListBooks;\nListBooks.propTypes = {\n  shelves: PropTypes.array.isRequired,\n  books: PropTypes.array.isRequired,\n  getBooks: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired\n};\nexport default ListBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBooks\");","map":{"version":3,"sources":["/home/mario/projects/udacity-myreads/starter/src/components/ListBooks.js"],"names":["BookShelf","OpenSearchButton","PropTypes","EmptyShelf","ListBooks","shelves","books","getBooks","isLoading","length","map","shelf","id","propTypes","array","isRequired","func","bool"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA,QAAjB;AAA2BC,EAAAA;AAA3B,CAAD,KAA2C;AACzD,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKF,KAAK,CAACG,MAAN,GAAe,CAAf,gBACK,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADL,gBAGG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAEQJ,OAAO,CAACK,GAAR,CAAaC,KAAD,iBACR,QAAC,SAAD;AAEI,UAAA,KAAK,EAAEA,KAFX;AAGI,UAAA,KAAK,EAAEL,KAHX;AAII,UAAA,WAAW,EAAEC,QAJjB;AAKI,UAAA,SAAS,EAAEC;AALf,WACSG,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA5BD;;KAAMR,S;AA8BNA,SAAS,CAACS,SAAV,GAAsB;AAClBR,EAAAA,OAAO,EAAEH,SAAS,CAACY,KAAV,CAAgBC,UADP;AAElBT,EAAAA,KAAK,EAAEJ,SAAS,CAACY,KAAV,CAAgBC,UAFL;AAGlBR,EAAAA,QAAQ,EAAEL,SAAS,CAACc,IAAV,CAAeD,UAHP;AAIlBP,EAAAA,SAAS,EAAEN,SAAS,CAACe,IAAV,CAAeF;AAJR,CAAtB;AAOA,eAAeX,SAAf","sourcesContent":["import BookShelf from \"./BookShelf\";\r\nimport OpenSearchButton from \"./OpenSearchButton\";\r\nimport PropTypes from \"prop-types\";\r\nimport EmptyShelf from \"./EmptyShelf\";\r\n\r\nconst ListBooks = ({shelves, books, getBooks, isLoading}) => {\r\n    return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            {books.length > 0\r\n                ? <EmptyShelf/>\r\n                :\r\n                <div className=\"list-books-content\">\r\n                    <OpenSearchButton/>\r\n                    <div>\r\n                        {\r\n                            shelves.map((shelf) => (\r\n                                <BookShelf\r\n                                    key={shelf.id}\r\n                                    shelf={shelf}\r\n                                    books={books}\r\n                                    updateBooks={getBooks}\r\n                                    isLoading={isLoading}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nListBooks.propTypes = {\r\n    shelves: PropTypes.array.isRequired,\r\n    books: PropTypes.array.isRequired,\r\n    getBooks: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default ListBooks;\r\n"]},"metadata":{},"sourceType":"module"}